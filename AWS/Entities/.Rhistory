newpoint = data.frame(logPrev = NA, Year = median(autism$Year))
# be sure to use interval = c("prediction") because X is in the original data set
prd_p <- predict(autismlog.lm, newdata = data.frame(Year = newx),
interval = c("prediction"), type = c("response"),
level = 0.95)
prd_p
predict(autismlog.lm, newpoint, interval = "prediction", level = 0.95)
str(newpoint)
predict(autismlog.lm, newpoint, interval = "prediction", level = 0.95)
plot(autism[,4], autism[,2],
xlim = c(7.5, 7.65), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newx, prd_c[,2], col = "blue", lty = 2, lwd = 2)
lines(newx, prd_c[,3], col = "blue", lty = 2, lwd = 2)
lines(newx, prd_p[,2], col = "brown", lty = 2, lwd = 2)
lines(newx, prd_p[,3], col = "brown", lty = 2, lwd = 2)
autism$logYear <- log(autism$Year)
autism$logYear
autismlinear.lm <- lm(Prevalence~logYear, autism)
summary(autismlinear.lm)
newxlinear <- autism$logYear
newxlinear <- sort(newxlinear)
# be sure to use interval = c("confidence") because X is in the original data set
prd_c = predict(autismlinear.lm, newdata=data.frame(logYear = newxlinear),
interval = c("confidence"),
type=c("response"),
level = 0.95)
prd_c
plot(autism[,4], autism[,2],
xlim = c(7.56, 7.65), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newx, prd_c[,2], col = "blue", lty = 2, lwd = 2)
lines(newx, prd_c[,3], col = "blue", lty = 2, lwd = 2)
lines(newx, prd_p[,2], col = "brown", lty = 2, lwd = 2)
lines(newx, prd_p[,3], col = "brown", lty = 2, lwd = 2)
plot(autism[,4], autism[,2],
xlim = c(7.56, 7.65), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newxlinear, prd_c[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_p[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_p[,3], col = "brown", lty = 2, lwd = 2)
plot(autism[,4], autism[,2],
xlim = c(7.59, 7.65), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newxlinear, prd_c[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_p[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_p[,3], col = "brown", lty = 2, lwd = 2)
view(autism)
plot(autism[,4], autism[,2],
xlim = c(7.59, 7.61), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newxlinear, prd_c[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_p[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_p[,3], col = "brown", lty = 2, lwd = 2)
prd_p
autism$logYear <- log(autism$Year)
autism$logYear
autismlinear.lm <- lm(Prevalence~logYear, autism)
summary(autismlinear.lm)
# Establish confidence intervals for regression line
newxlinear <- autism$logYear
newxlinear <- sort(newxlinear)
# be sure to use interval = c("confidence") because X is in the original data set
prd_c_lin = predict(autismlinear.lm, newdata=data.frame(logYear = newxlinear),
interval = c("confidence"),
type=c("response"),
level = 0.95)
prd_clin
#Establish prediction intervals for regressions line
# be sure to use interval = c("prediction") because X is in the original data set
prd_plin <- predict(autismlinear.lm, newdata = data.frame(logYear = newxlinear),
interval = c("prediction"), type = c("response"),
level = 0.95)
prd_plin
newpoint = data.frame(Prevalence = median(autism$Prevalence), logYear = NA)
predict(autismlinear.lm, newpoint, interval = "prediction", level = 0.95)
# Plot with confidence and prediction intervals
plot(autism[,4], autism[,2],
xlim = c(7.59, 7.61), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newxlinear, prd_clin[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_clin[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,3], col = "brown", lty = 2, lwd = 2)
plot(autism[,4], autism[,2],
xlim = c(7.59, 7.61), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newxlinear, prd_c_lin[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_lin[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,3], col = "brown", lty = 2, lwd = 2)
# Plot with confidence and prediction intervals
plot(autism[,4], autism[,2],
xlim = c(7.595, 7.603), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newxlinear, prd_c_lin[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_lin[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,3], col = "brown", lty = 2, lwd = 2)
plot(autism[,4], autism[,2],
xlim = c(7.5965, 7.602), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newxlinear, prd_c_lin[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_lin[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,3], col = "brown", lty = 2, lwd = 2)
plot(autism[,4], autism[,2],
xlim = c(7.5965, 7.615), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newxlinear, prd_c_lin[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_lin[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,3], col = "brown", lty = 2, lwd = 2)
plot(autism[,4], autism[,2],
xlim = c(7.5965, 7.6015), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newxlinear, prd_c_lin[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_lin[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,3], col = "brown", lty = 2, lwd = 2)
h <- hist(autismlog.res, border = "black", col = "orange",
xlab = "Residuals",
main = "Prevalence of Autism")
res <- autismlog.res
xfit <- seq(min(res), max(res), length = 40)
yfit <- dnorm(xfit, mean=mean(res), sd=sd(res))
yfit <- yfit * diff(h$mids[1:2]) * length(res)
lines(xfit, yfit, col = "blue", lwd = 2)
# get the residuals from autismlog.lm
autismlinear.res = resid(autismlinear.lm)
# plot the residuals
plot(autism$Year, autismlinear.res,
ylab = "Residuals", xlab = "Year",
main = "Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
h <- hist(autismlinear.res, border = "black", col = "orange",
xlab = "Residuals",
main = "Prevalence of Autism")
res <- autismlinear.res
xfit <- seq(min(res), max(res), length = 40)
yfit <- dnorm(xfit, mean=mean(res), sd=sd(res))
yfit <- yfit * diff(h$mids[1:2]) * length(res)
lines(xfit, yfit, col = "blue", lwd = 2)
autismlinear.res = resid(autismlinear.lm)
# plot the residuals
plot(autism$logYear, autismlinear.res,
ylab = "Residuals", xlab = "Year",
main = "Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
# get the residuals from autismlog.lm
autismlinear.res = resid(autismlinear.lm)
# plot the residuals
plot(autism$logYear, autismlinear.res,
ylab = "Residuals", xlab = "log(Year)",
main = "Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
plot(autism$logYear, autismlinear.res,
ylab = "Residuals", xlab = "log(Year)",
main = "Linear - Log Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
h <- hist(autismlinear.res, border = "black", col = "orange",
xlab = "Residuals",
main = "Linear-Log Prevalence of Autism")
res <- autismlinear.res
xfit <- seq(min(res), max(res), length = 40)
yfit <- dnorm(xfit, mean=mean(res), sd=sd(res))
yfit <- yfit * diff(h$mids[1:2]) * length(res)
lines(xfit, yfit, col = "blue", lwd = 2)
plot(autism[,4], autism[,2],
xlim = c(7.5965, 7.6015), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newxlinear, prd_c_lin[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_lin[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,3], col = "brown", lty = 2, lwd = 2)
# get the residuals from autismlog.lm
autismlinear.res = resid(autismlinear.lm)
# plot the residuals
plot(autism$logYear, autismlinear.res,
ylab = "Residuals", xlab = "log(Year)",
main = "Linear - Log Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
autismloglog.lm <- lm(logPrev~logYear, autism)
summary(autismloglog.lm)
autismloglog.lm <- lm(logPrev~logYear, autism)
summary(autismloglog.lm)
# Establish confidence intervals for regression line
newxloglog <- autism$logYear
newxloglog <- sort(newxloglog)
# be sure to use interval = c("confidence") because X is in the original data set
prd_c_loglog = predict(autismloglog.lm, newdata=data.frame(logYear = newxloglog),
interval = c("confidence"),
type=c("response"),
level = 0.95)
prd_c_loglog
prd_p_loglog <- predict(autismloglog.lm, newdata = data.frame(logYear = newxloglog),
interval = c("prediction"), type = c("response"),
level = 0.95)
prd_p_loglog
autism$logPrev <- log(autism$Prevalence)
autism$logPrev
autismlog.lm <- lm(logPrev~Year, autism)
summary(autismlog.lm)
# Establish confidence intervals for regression line
newx <- autism$Year
newx <- sort(newx)
# be sure to use interval = c("confidence") because X is in the original data set
prd_c = predict(autismlog.lm, newdata=data.frame(Year = newx),
interval = c("confidence"),
type=c("response"),
level = 0.95)
prd_c
newpoint = data.frame(logPrev = NA, Year = median(autism$Year))
# be sure to use interval = c("prediction") because X is in the original data set
prd_p <- predict(autismlog.lm, newdata = data.frame(Year = newx),
interval = c("prediction"), type = c("response"),
level = 0.95)
prd_p
predict(autismlog.lm, newpoint, interval = "prediction", level = 0.95)
plot(autism[,1], autism[,3],
xlim = c(1992, 2000), ylim=c(1,3),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newx, prd_c[,2], col = "blue", lty = 2, lwd = 2)
lines(newx, prd_c[,3], col = "blue", lty = 2, lwd = 2)
lines(newx, prd_p[,2], col = "brown", lty = 2, lwd = 2)
lines(newx, prd_p[,3], col = "brown", lty = 2, lwd = 2)
plot(autism[,1], autism[,3],
xlim = c(1992, 2000), ylim=c(1.17,2.96),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
lines(newx, prd_c[,2], col = "blue", lty = 2, lwd = 2)
lines(newx, prd_c[,3], col = "blue", lty = 2, lwd = 2)
lines(newx, prd_p[,2], col = "brown", lty = 2, lwd = 2)
lines(newx, prd_p[,3], col = "brown", lty = 2, lwd = 2)
autismloglog.lm <- lm(logPrev~logYear, autism)
summary(autismloglog.lm)
# Establish confidence intervals for regression line
newxloglog <- autism$logYear
newxloglog <- sort(newxloglog)
# be sure to use interval = c("confidence") because X is in the original data set
prd_c_loglog = predict(autismloglog.lm, newdata=data.frame(logYear = newxloglog),
interval = c("confidence"),
type=c("response"),
level = 0.95)
prd_c_loglog
prd_p_loglog <- predict(autismloglog.lm, newdata = data.frame(logYear = newxloglog),
interval = c("prediction"), type = c("response"),
level = 0.95)
prd_p_loglog
# be sure to use interval = c("prediction") because X is in the original data set
prd_p_loglog <- predict(autismloglog.lm, newdata = data.frame(logYear = newxloglog),
interval = c("prediction"), type = c("response"),
level = 0.95)
prd_p_loglog
plot(autism[,4], autism[,3],
xlim = c(7.5965, 7.6015), ylim=c(1.16,2.96),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlog.lm, col="red")
abline(autismlog.lm, col="red")
abline(autismloglog.lm, col="red")
lines(newxlinear, prd_c_lin[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_lin[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_plin[,3], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_c_loglog[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_loglog[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_p_loglog[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_p_loglog[,3], col = "brown", lty = 2, lwd = 2)
plot(autism[,4], autism[,3],
xlim = c(7.5965, 7.6015), ylim=c(1.16,2.96),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismloglog.lm, col="red")
lines(newxlinear, prd_c_loglog[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_loglog[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_p_loglog[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_p_loglog[,3], col = "brown", lty = 2, lwd = 2)
plot(autism[,4], autism[,3],
xlim = c(7.5965, 7.6015), ylim=c(1.16,2.96),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log Y + Log X Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismloglog.lm, col="red")
lines(newxlinear, prd_c_loglog[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_loglog[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_p_loglog[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_p_loglog[,3], col = "brown", lty = 2, lwd = 2)
# get the residuals from autismlog.lm
autismloglog.res = resid(autismloglog.lm)
# plot the residuals
plot(autism$logYear, autismloglog.res,
ylab = "Residuals", xlab = "log(Year)",
main = "Log Y + Log X Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
h <- hist(autismloglog.res, border = "black", col = "orange",
xlab = "Residuals",
main = "Log Y + Log X Prevalence of Autism")
res <- autismloglog.res
xfit <- seq(min(res), max(res), length = 40)
yfit <- dnorm(xfit, mean=mean(res), sd=sd(res))
yfit <- yfit * diff(h$mids[1:2]) * length(res)
lines(xfit, yfit, col = "blue", lwd = 2)
h <- hist(autismlinear.res, border = "black", col = "orange",
xlab = "Residuals",
main = "Linear-Log Prevalence of Autism")
res <- autismlinear.res
xfit <- seq(min(res), max(res), length = 40)
yfit <- dnorm(xfit, mean=mean(res), sd=sd(res))
yfit <- yfit * diff(h$mids[1:2]) * length(res)
lines(xfit, yfit, col = "blue", lwd = 2)
autism$logYear <- log(autism$Year)
autism$logYear
autismlinear.lm <- lm(Prevalence~logYear, autism)
summary(autismlinear.lm)
# Establish confidence intervals for regression line
newxlinear <- autism$logYear
newxlinear <- sort(newxlinear)
# be sure to use interval = c("confidence") because X is in the original data set
prd_c_lin = predict(autismlinear.lm, newdata=data.frame(logYear = newxlinear),
interval = c("confidence"),
type=c("response"),
level = 0.95)
prd_c_lin
prd_p_lin <- predict(autismlinear.lm, newdata = data.frame(logYear = newxlinear),
interval = c("prediction"), type = c("response"),
level = 0.95)
prd_p_lin
plot(autism[,4], autism[,2],
xlim = c(7.5965, 7.6015), ylim=c(0,20),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log-Linear Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismlinear.lm, col="red")
lines(newxlinear, prd_c_lin[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_lin[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_p_lin[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_p_lin[,3], col = "brown", lty = 2, lwd = 2)
# get the residuals from autismlog.lm
autismlinear.res = resid(autismlinear.lm)
# plot the residuals
plot(autism$logYear, autismlinear.res,
ylab = "Residuals", xlab = "log(Year)",
main = "Linear - Log Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
h <- hist(autismlinear.res, border = "black", col = "orange",
xlab = "Residuals",
main = "Linear-Log Prevalence of Autism")
res <- autismlinear.res
xfit <- seq(min(res), max(res), length = 40)
yfit <- dnorm(xfit, mean=mean(res), sd=sd(res))
yfit <- yfit * diff(h$mids[1:2]) * length(res)
lines(xfit, yfit, col = "blue", lwd = 2)
autismloglog.lm <- lm(logPrev~logYear, autism)
summary(autismloglog.lm)
# Establish confidence intervals for regression line
newxloglog <- autism$logYear
newxloglog <- sort(newxloglog)
# be sure to use interval = c("confidence") because X is in the original data set
prd_c_loglog = predict(autismloglog.lm, newdata=data.frame(logYear = newxloglog),
interval = c("confidence"),
type=c("response"),
level = 0.95)
prd_c_loglog
prd_p_loglog <- predict(autismloglog.lm, newdata = data.frame(logYear = newxloglog),
interval = c("prediction"), type = c("response"),
level = 0.95)
prd_p_loglog
plot(autism[,4], autism[,3],
xlim = c(7.5965, 7.6015), ylim=c(1.16,2.96),
xlab = "Year", ylab = "log(Prevalence Score)",
main = "Log Y + Log X Transformation of Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
abline(autismloglog.lm, col="red")
lines(newxlinear, prd_c_loglog[,2], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_c_loglog[,3], col = "blue", lty = 2, lwd = 2)
lines(newxlinear, prd_p_loglog[,2], col = "brown", lty = 2, lwd = 2)
lines(newxlinear, prd_p_loglog[,3], col = "brown", lty = 2, lwd = 2)
# get the residuals from autismlog.lm
autismloglog.res = resid(autismloglog.lm)
# plot the residuals
plot(autism$logYear, autismloglog.res,
ylab = "Residuals", xlab = "log(Year)",
main = "Log Y + Log X Prevalence of Autism",
col = "black", bg = "orange", pch = 21)
h <- hist(autismloglog.res, border = "black", col = "orange",
xlab = "Residuals",
main = "Log Y + Log X Prevalence of Autism")
res <- autismloglog.res
xfit <- seq(min(res), max(res), length = 40)
yfit <- dnorm(xfit, mean=mean(res), sd=sd(res))
yfit <- yfit * diff(h$mids[1:2]) * length(res)
lines(xfit, yfit, col = "blue", lwd = 2)
autism <- read.csv(file.choose())
autism$logPrev <- log(autism$Prevalence)
autism$logPrev
autismlog.lm <- lm(logPrev~Year, autism)
summary(autismlog.lm)
steers <- data.frame(c(1,1,2,2,4,4,6,6,8,8),
c(7.02, 6.93, 6.42, 6.51, 6.07, 5.99, 5.59, 5.80, 5.51, 5.36))
view(steers)
steers <- colnames(steers,"Time", "pH")
?conames
?colname
?colnames
colnames(steers) <- c("Time", "pH")
view(steers)
?lm
sep_means <-lm(log(Time)~Group, data=steers)
index(steers)
Str(steers)
str(steers)
attr(steers)
attributes(steers)
steers$row.names
steers <- data.frame(c(1,2,3,4,5,6,7,8,9,10),
c(1,1,2,2,4,4,6,6,8,8),
c(7.02, 6.93, 6.42, 6.51, 6.07, 5.99, 5.59, 5.80, 5.51, 5.36))
colnames(steers) <- c("Steer", "Time", "pH")
view(steers)
library(rmarkdown)
render_site()
library(ggplot2)
?geom_boxplot
?ggplot2-specs
iris
?write
getwd()
write(file="iris")
write(iris, file="iris")
str(iris)
write(iris, file="iris")
install.packages('rjson')
library(rjson)
jsonData < toJSON(iris)
jsonData <- toJSON(iris)
write(jsonData, "output.json")
getwd
getwd()
?png
library(rjson)
library(RJSONIO)
setwd(choose.dir())
fromJSON()
library(rjson)
fromJSON()
rjson::fromJSON()
rjson::fromJSON(choose.files())
rjson::fromJSON(choose.files())
rjson::fromJSON(choose.files())
setwd(choose.dir())
rjson::fromJSON(entities.json)
setwd(choose.dir())
rjson::fromJSON(entities.json)
getwd()
rjson::fromJSON("entities.json")
rjson::fromJSON("entities.json")
library(rjson)
library(jsonlite)
rjson::fromJSON(file = "entities.json")
result <- rjson::fromJSON(file = "entities.json")
result
entitis <- as.data.frame(result)
entities
entities <- as.data.frame(result)
entities
